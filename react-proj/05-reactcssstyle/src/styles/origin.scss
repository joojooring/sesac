@import "./media";

$color-main: red;


// style코드 블록을 함수처럼 하나로 묶어두고,
@mixin box-width($size){
    width: $size;
    height: $size;
}

// 사용시에는 include를 이용
.box1 {
    @include box-width(100px);
    background-color : blue;
}

// 사용시에는 include를 이용
.box2 {
    @include box-width(200px);
    background-color : yellow;
    }

.scss-parents {
    color: $color-main;
    // width : 100px;
    // background-color : aqua;
}


// sass의 중첩
.scss-parents{
    ul{
        background-color: black;
        color : white;
    }

    &:hover {
        cursor : pointer;
    }

}

.btn {
    padding:10px 20px;
    border: none;
    border-radius: 20px;
    background-color: pink;
}

// 확장
.btn-primary{
    @extend .btn;
    background-color : aqua;
    }







// 믹스인
.origin-sass{
    display: flex;
    .box{
        @include box-width(100px);

        &.red {
            background-color: red;
        }
        &.orange {
            background-color: orange;
        }
        &.yellow {
            background-color: yellow;
        }
        &.green {
            background-color: green;
        }
        &.blue {
            background-color: blue;
        }
        &.purple {
            background-color: purple;
        }
    }
}

// 원래 css의 중첩.scss-parents > ul {}


// @mixin tablet {
//     @media screen and (max-width: 768px) {
//         .origin-sass{
//             display: block;
//         }

//     }
// }

// 모니터 해상도가 다를때 기준을 정해주는게 좋다.
// 태블릿일 때는 768px

// @mixin tablet {
//     @media screen and (max-width: 768px) {
//         @content;
//     }
// }
// @mixin은 css에서 묶어두고 싶은 코드블럭을 정의할 떄 사용
// @include는 정의한 @mixin을 사용할 떄
// @content는 부속 기능 중 하나. 정의할 떄 @content 키워드 적은 곳에 뭐가 들어가는지를 보면 됨-사용할떄, 중괄호 안에 적은 내용

@include tablet(){
    .origin-sass{
        display: block;
    }

}


// 핸드폰일 때는 500px